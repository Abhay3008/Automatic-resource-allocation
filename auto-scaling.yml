- hosts: localhost
  connection: local
  vars:
    max_size: 10
  gather_facts: False
  tasks:
    - name: Retrieve current Auto Scaling Group properties
      command: "aws --region ap-south-1 autoscaling describe-auto-scaling-groups --auto-scaling-group-names webserver1"
      register: asg_properties_result
    - name: Set asg_properties variable from JSON output if the Auto Scaling Group already exists
      set_fact:
        asg_properties: "{{ (asg_properties_result.stdout | from_json).AutoScalingGroups[0] }}"
      when: (asg_properties_result.stdout | from_json).AutoScalingGroups | count

    - name: Configure Auto Scaling Group and perform rolling deploy
      ec2_asg:
        region: "ap-south-1"
        name: webapp
        launch_config_name: webserver1
        availability_zones: "ap-south-1a"
        health_check_type: ELB
        health_check_period: 300
        desired_capacity: "{{ asg_properties.DesiredCapacity | default(2) }}"
        replace_all_instances: yes
        replace_batch_size: "{{ (asg_properties.DesiredCapacity | default(2) / 4) | round(0, 'ceil') | int }}"
        min_size: 2
        max_size: 10
        load_balancers:
          - webapp
        state: present
      register: asg_result
    - name: Configure Scaling Policies
      ec2_scaling_policy:
        region: "ap-south-1"
        name: "{{ item.name }}"
        asg_name: webapp
        state: present
        adjustment_type: "{{ item.adjustment_type }}"
        min_adjustment_step: "{{ item.min_adjustment_step }}"
        scaling_adjustment: "{{ item.scaling_adjustment }}"
        cooldown: "{{ item.cooldown }}"
      with_items:
        - name: "Increase Group Size"
          adjustment_type: "ChangeInCapacity"
          scaling_adjustment: +1
          min_adjustment_step: 1
          cooldown: 180
        - name: "Decrease Group Size"
          adjustment_type: "ChangeInCapacity"
          scaling_adjustment: -1
          min_adjustment_step: 1
          cooldown: 300
      register: sp_result
    - name: Determine Metric Alarm configuration
      set_fact:
        metric_alarms:
          - name: "webapp-ScaleUp"
            comparison: ">="
            threshold: 50.0
            alarm_actions:
              - "{{ sp_result.results[0].arn }}"
          - name: "webapp-ScaleDown"
            comparison: "<="
            threshold: 20.0
            alarm_actions:
              - "{{ sp_result.results[1].arn }}"
    - debug:
        msg: " {{ metric_alarms }} "
